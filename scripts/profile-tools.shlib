#!/bin/bash

# LDS-Tools2: A collection of useful scripts developed by M E Leypold
# Copyright (C) 2013 -- M E Leypold

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# scripts/profile-tools.shlib: Utility procedures to support writing
# "eval style" profiles. This version has been ripped from dot-usr and
# extended, the idea is the the version from dot-usr will be
# deprecated for some time and dot-usr will depend on lsd-tools2 while
# it is in development.

begin_profile(){    
    IS_SUB_PROFILE=false

    while test "$#" -gt 0; do
	case "$1" in
	    -sub) IS_SUB_PROFILE=true;;	    
	esac 
	shift
    done
    
    # XXX OPTION to set syntax for C-shell compatibility ...
}

end_profile(){
    local VAR
    local VARS="$(sort_args $EXPORTED_VARS)"
    echo ""
    echo "# Profile  : $MYNAME"
    echo "# Variables: "$VARS
    echo ""
    for VAR in $(sort_args $EXPORTED_VARS); do
	eval "dump_var $VAR"
    done
}

sort_args(){
    { while test "$#" -gt 0; do echo "$1"; shift; done; } | sort | uniq 
}

EXPORTED_VARS=""

export_vars(){
    EXPORTED_VARS="$EXPORTED_VARS $*"
    eval "export $*"
}

export_var(){
    local VAR="$1"
    if test "$#" -gt 1; then
       eval "$VAR="'"'"$2"'"'
    fi
    export_vars "$1"
}

shell_escape(){
    echo "$1" | sed 's|'"'"'|'"'"'"'"'"'"'"'"'|'
}

shell_quote(){
    echo "'$(shell_escape "$1")'"
}

dump_var(){
    local VAR="$1"
    echo "export $VAR=$(eval 'shell_quote "$'"$VAR"'"')"
    if "$IS_SUB_PROFILE"; then
	echo "export_vars $VAR"
    fi
}

configure_scriptdir(){
    local DIR="$1"
    case "$DIR" in
	/*) ;;
         *) DIR="$(/bin/pwd)/$DIR";;
    esac
    export_var PATH "$DIR:$PATH"
}

add_to_path(){            # this is prepending!!
   local VAR="$1"
   shift
   while test "$#" -gt 0; do      
     if eval 'test -z "$'"$V"'"'; then
	 eval "export_var $VAR $(shell_quote $1)"
     else
	 eval 'export_var '"$VAR"' "$1:$'"$VAR"'"'
     fi
     shift
   done
}
